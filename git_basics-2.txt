

1.) We can change behaviour of git and we can set various Git attributes using 
    file - ~/.gitconfig.
    
    Example: - Content of file ".gitconfig" can be as below.
    [color]
        ui = auto
        
    [user]
        name = Mir Faisal
        email = mir.faisal@harman.com
        
    [editor]
        default = vim
        
    [core]
        editor = vim
        
2.) To set default editor in Git: -
    # git config --global core.editor "vim"
        
3.) To see Git log in single line for different commits: -
    # git log --oneline
    
4.) To see staged changes only file name: -
    # git diff --cached --name-only
    
5.) To see only staged changes: -
    # git diff --cached
    
6.) To delete top commit with commit ID: -
    # git reset --hard <commit ID>
    
7.) To see help on any git command, use --help option as below.
    Example: -
    # git am --help
    #git commit --help

8.) Filter git log by the name of author or commiter, as below.
    # git log --author="Mir Faisal"
    # git log --committer="Mir Faisal"
    
9.) To see the available releases run below command: -
    # git tag
    
10.) Git cherrypick: -
Suppose there are two branches feature-1 and feature-2 and we want to take a commit of feature-1 
to feature-2. For this we will do following steps.
    i. Checkout to feature-1 branch.
        # git checkout feature-1
    ii. Run "git log" and copy Hash of the commit (six characters is enough) to be cherrypicked.
    iii. Now switch to feature2 and run git cherry-pick on the hash you just got from the log.
        # git checkout feature-2
        # git cherrypick <Hash of the commit copied in step - II>
        
11) Difference between "git am" and "git apply": -
"git apply" is for applying straight diffs (e.g. from git diff) whereas git am is for applying patches
and sequences of patches and is the "opposite" of git format-patch. git am tries to extract commit messages
and author details from email messages which is why it can make commits.

With "git am" we apply the patch so when we run git status we won't see any local changes, but git log will
show the patch have been committed to the source code.
But with git apply we make the changes in the source files as if we were writing the code yourself, consequently
git status and git diff will output the changes appeared in the patch we applied. Hence with git apply we can 
fix/add more changes and git add them together as a single new patch.
    
    
    

    

