
$mkdir My-Git
$cd My-Git
$git init

$ls -la
o/p - .git

$cd .git
$ls
o/p - branches config description HEAD hooks info objects refs
$cat HEAD
o/p - refs/heads/master

Note - All objects are stored in .git/objects folder.
$ find .git/objects -type f //Find files

=>List files in staging area
$git ls-files -s

=>To show status of Git:-
$git status

=>Command to set Git author name and email:-
$git config --gloabal user.name <Name>
$git config --gloabal user.email <Email>
$git config --list

=>Git command to unstage a file:-
$git rm --cached <file>

=>Checkout commit or branch:-
$git checkout <commit/file/branch>

=>Branch:-
->Pointers for all branches are located in .git/refs/heads fol

=>Git checkout:-
$git checkout <branch>  //Change reference to specific branch
$git checkout <sha1>   //Change reference to specific commit

=>How to find HEAD is pointing to which branch or commit?
$cat .git/HEAD
O/p - ref: refs/heads/mir-feature1

=>Note - "git checkout" command just moves HEAD pointer and nothing
else.

=>Git commands for branch management:-
->List all local branches
$git branch

->Create new branch:-
$git branch <name>

->Create a branch with checkout:-
$git checkout -b <branch name>

->Checkout specific branch
$git checkout <branch name>

->Delete unmerged branch:-
$git -D <branch>

->Delete merged branch:-
$git -d <branch>

->Rename a branch:-
$git branch -m <old> <new>

->To work directly on remote branch:-
$git checkout origin/Elina_StablePNP

->To create mybranch and track origin/abranch:-
$git checkout mybranch origin/abranch

=>Git clone:-
$git clone <url>
O/p - It creates local repository after cloning.

=>git diff command:-
$git diff
O/p - Nothing
As all changes we have already committed. If we do changes in a commited
file then it will be displayed as line with having prefix "-" or  "+".
If a line precedes with minus symbol, then it means it is deleted.
But if any line is prefixed with plus symbol, then it means this new line 
is added.

-> To see difference between two commits:-
$git diff <commit1-sha> <commit2-sha> 

-> To create Patch based on the changes:-
$git diff > <file_name.patch>

-> Comparing files from two branches:-
$git diff main new_branch ./diff_test.txt

->To see difference between new version of file:-
$git diff <file_name.txt>

=> Creating and applying patch:-
-> Create 10 patch files form last commit to previous onwards 
$git format-patch <4-digit hash of last commit> -10 <-|
$cp *.patch <new-kernel-repo-to-which-patch-to-apply>

$git am 001----.patch
$git am 002----.patch
$git am 010----.patch

-> While applying patch if error comes, then run below command.
$git am --abort<-|

=>Create a remote repository on GitHub based on local repository:-
$ If suppose you have cloned a repo from any source and now you want 
  to maintain it from my own remote GitHub account, then we have to 
  follow below procedure.
  I. Create a repository in Github and obtain its URL, as below.
  https://github.com/mirfaisal-sw/Project_Feb2022.git
  
  II. Go to any synced repository which you want to maintain.
  $cd ../LN_Kernel
  
  III. Set URL of remote repository to this repository.
  $git remote set-url origin <url of remote repository>
  
  IV. Set user name and email.
  $git config --global user.name "your_github_username"
  $ git config --global user.email "your_github_email"
  $ git config -l    /*this is list command, use -l or --list*/
  
  To see only user name - 
  $git config user.name
  o/p - "your user name"
  
  V.Now push your local repo to remote.
  $git push -u origin master
  
  It will ask for credentials, if it fails and give error as below.
  Then follow below steps.
  Error: remote: Support for password authentication was removed on August 13, 2021. 
  Please use a personal access token instead.
  
  Solution:
  From your GitHub account, go to Settings => Developer Settings => Personal Access Token => 
  Generate New Token (Give your password) => Fillup the form => click Generate token => Copy 
  the generated Token, it will be something like - ghp_sFhFsSHhTzMDreGRLjmks4Tzuzgthdvfsrta
  
  Use above token in place of password.
  $ Password for 'https://github.com' : give your personal access token here
  
=> To see remote repo of any local repo. Then run below command.
   $ git remote -v

=> How do I remove version tracking from a project cloned from git?
   Simply delete .git folder.
   $ rm -rf .git

=> To see all commits in local Git repositiry, we run below command: -
  $ git log
  or
  $git log --oneline
  
=> To know changes made in a commit: 
   $git show <commit ID>
   Example: 
   $git show 148188b657b1
   
=> Git command to discard local changes: -
   $git reset --hard
   
=>

  
  
  
  
  








































